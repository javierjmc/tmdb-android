apply plugin: 'com.android.application'

android {
    compileSdkVersion vers.compileSdk
    buildToolsVersion vers.buildTools

    final BASE_APPLICATION_ID = 'com.example.themoviedb'

    defaultConfig {
        applicationId BASE_APPLICATION_ID
        minSdkVersion vers.minSdk
        targetSdkVersion vers.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "themoviedb"

    productFlavors {
        // The production flavored app uses the production api
        production {
            dimension "themoviedb"
            applicationId BASE_APPLICATION_ID
            testApplicationId applicationId + '.test'

            buildConfigField 'String', 'SERVER_URL', THEMOVIEDB_ENDPOINT
            buildConfigField 'String', 'SERVER_API_KEY', THEMOVIEDB_API_KEY
        }

        // The staging flavored app uses the staging api
        staging {
            dimension "themoviedb"
            applicationId BASE_APPLICATION_ID + ".staging"
            testApplicationId applicationId + '.test'

            buildConfigField 'String', 'SERVER_URL', THEMOVIEDB_ENDPOINT
            buildConfigField 'String', 'SERVER_API_KEY', THEMOVIEDB_API_KEY
        }
    }

    buildTypes {

        // The Debug builds are used for development and local testing
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
        }

        // The Release builds are used for publishing to play store
        release {
            minifyEnabled false
            //signingConfig signingConfigs.release
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:${vers.support}"
    implementation "com.android.support:recyclerview-v7:${vers.support}"
    implementation "com.android.support:cardview-v7:${vers.support}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // Joda-Time library
    // See: https://github.com/dlew/joda-time-android
    implementation 'net.danlew:android.joda:2.9.9.1'

    // Field and method binding for Android views
    // See: https://jakewharton.github.io/butterknife/
    implementation "com.jakewharton:butterknife:${vers.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${vers.butterknife}"

    // A Model-View-Presenter / Model-View-Intent library for modern Android apps
    // See: https://github.com/sockeqwe/mosby
    implementation "com.hannesdorfmann.mosby3:mvi:${vers.mosby}"

    implementation "io.reactivex.rxjava2:rxjava:${vers.rxjava2}"
    implementation "io.reactivex.rxjava2:rxandroid:${vers.rxandroid2}"

    // A logger with a small, extensible API which provides utility on top of Android's normal Log class.
    // See: https://github.com/JakeWharton/timber
    implementation "com.jakewharton.timber:timber:${vers.timber}"

    // A collection of source code generators for Java.
    // See: https://github.com/google/auto
    provided "com.google.auto.value:auto-value:${vers.autovalue}" // needed for Android Studio
    annotationProcessor "com.google.auto.value:auto-value:${vers.autovalue}"

    // A fast dependency injector for Android and Java.
    // See: https://github.com/google/dagger
    implementation "com.google.dagger:dagger:${vers.dagger}"
    implementation "com.google.dagger:dagger-android:${vers.dagger}"
    implementation "com.google.dagger:dagger-android-support:${vers.dagger}"
    provided 'javax.annotation:jsr250-api:1.0'
    annotationProcessor "com.google.dagger:dagger-compiler:${vers.dagger}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${vers.dagger}"

    // A type-safe HTTP client for Android and Java
    // See: https://github.com/square/retrofit
    implementation "com.squareup.retrofit2:retrofit:${vers.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${vers.retrofit}"
    implementation "com.squareup.retrofit2:converter-scalars:${vers.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${vers.retrofit}"

    // OkHttp: https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'


    testImplementation "junit:junit:${testvers.junit}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${vers.okhttp}"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'


}
